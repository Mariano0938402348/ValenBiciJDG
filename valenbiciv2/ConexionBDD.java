
package es.gva.edu.iesjuandegaray.valenbiciv2;

// Importamos las clases de conexion a mysql y los drivers de sql
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.time.LocalDateTime;
import java.time.format.DateTimeFormatter;
import java.util.logging.Level;
import java.util.logging.Logger;
import org.json.JSONObject;
//import DatosJSon;
/**
*
* @author EvaG.
*/

public class ConexionBDD extends javax.swing.JFrame {
    
// Declaramos la conexion a mysql
 private static Connection con;
 private static Statement s;
 private static DatosJSon dJSon;
 private static int numEst = 3;

 private static final String driver = "com.mysql.cj.jdbc.Driver";//com.mysql.jdbc.Driver";
 //private static final String user = "EvaG";
 //private static final String pass = "123456789";
 private static final String url = "jdbc:mysql://localhost:33306/valenbicibd";
 // Función que va a conectarse a mi BDD de mysql
 
 private static final String user = "root";
 private static final String pass = "alumnoalumno";


    /**
     * Creates new form ConexionBDD
     */
    public ConexionBDD() {
        initComponents(); dJSon = new DatosJSon(numEst);
        jTextFieldNumEst.setText(""+numEst);
    }
    
    public void conector() {
        try {
            // Cargar el driver de MySQL
            Class.forName(driver);

            // Establecer la conexión
            con = DriverManager.getConnection(url, user, pass);

            // Crear el Statement para ejecutar consultas
            s = con.createStatement();

            jLabelEstadoCx.setText("Conexión exitosa a la base de datos.");
        } catch (ClassNotFoundException e) {
            jLabelEstadoCx.setText("Error: No se encontró el driver de MySQL.");
            e.printStackTrace();
        } catch (SQLException e) {
            jLabelEstadoCx.setText("Error al conectar con la base de datos.");
            e.printStackTrace();
            
        }
    }

    public void cerrarConexion() {
        try {
            if (s != null && !s.isClosed()) {
                s.close();
            }
            if (con != null && !con.isClosed()) {
                con.close();
            }
            jLabelEstadoCx.setText("Conexión cerrada correctamente.");
        } catch (SQLException ex) {
            jLabelEstadoCx.setText("Error al cerrar la conexión.");
            Logger.getLogger(ConexionBDD.class.getName()).log(Level.SEVERE, null, ex);
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jTextFieldNumEst = new javax.swing.JTextField();
        jButtonDatos = new javax.swing.JButton();
        jButtonConectarBDD = new javax.swing.JButton();
        jButtonAddBDD = new javax.swing.JButton();
        jLabelDatosEstaciones = new javax.swing.JLabel();
        jLabelEstadoCx = new javax.swing.JLabel();
        jLabelAddBDD = new javax.swing.JLabel();
        jButtonCerrarCxBDD = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Introduce el número de estaciones a consunltar:");

        jTextFieldNumEst.setText("Num Estaciones");
        jTextFieldNumEst.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTextFieldNumEstFocusLost(evt);
            }
        });

        jButtonDatos.setText("Datos");
        jButtonDatos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonDatosMouseClicked(evt);
            }
        });

        jButtonConectarBDD.setText("Conectar");
        jButtonConectarBDD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonConectarBDDMouseClicked(evt);
            }
        });

        jButtonAddBDD.setLabel("Añadir a BD");
        jButtonAddBDD.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonAddBDDMouseClicked(evt);
            }
        });

        jLabelDatosEstaciones.setText("Obtener Datos de Estaciones");

        jLabelEstadoCx.setText("Estado Conexión");

        jLabelAddBDD.setText("Primero Obtener Datos de Estaciones y Conectar con BDD");

        jButtonCerrarCxBDD.setText("Cerrar conexión");
        jButtonCerrarCxBDD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCerrarCxBDDActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldNumEst))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonCerrarCxBDD))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButtonConectarBDD, javax.swing.GroupLayout.DEFAULT_SIZE, 92, Short.MAX_VALUE)
                                .addComponent(jButtonDatos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(jButtonAddBDD, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelAddBDD, javax.swing.GroupLayout.DEFAULT_SIZE, 325, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelDatosEstaciones)
                                    .addComponent(jLabelEstadoCx))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jScrollPane1))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldNumEst, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonDatos)
                    .addComponent(jLabelDatosEstaciones))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 112, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonConectarBDD)
                    .addComponent(jLabelEstadoCx))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonAddBDD)
                    .addComponent(jLabelAddBDD))
                .addGap(19, 19, 19)
                .addComponent(jButtonCerrarCxBDD)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonCerrarCxBDDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCerrarCxBDDActionPerformed
        // TODO add your handling code here:
        cerrarConexion();
        jButtonCerrarCxBDD.setEnabled(true);
    }//GEN-LAST:event_jButtonCerrarCxBDDActionPerformed

    private void jButtonDatosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonDatosMouseClicked
        // TODO add your handling code here:
        dJSon.mostrarDatos(numEst);
        jLabelDatosEstaciones.setText("Datos de estaciones: ");
        jTextArea1.setText(dJSon.getDatos());
    }//GEN-LAST:event_jButtonDatosMouseClicked

    private void jButtonConectarBDDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonConectarBDDMouseClicked
        // TODO add your handling code here:
        conector();
        jButtonAddBDD.setEnabled(true);
    }//GEN-LAST:event_jButtonConectarBDDMouseClicked

    private void jTextFieldNumEstFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTextFieldNumEstFocusLost
        // TODO add your handling code here:
        numEst = Integer.parseInt(jTextFieldNumEst.getText());
        dJSon.mostrarDatos(numEst);
        jLabelDatosEstaciones.setText("Datos estaciones: ");
        //jTextArea1.setText(dJSon.getDatos());
    }//GEN-LAST:event_jTextFieldNumEstFocusLost

    private void jButtonAddBDDMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonAddBDDMouseClicked
        //  add your handling code here:
        try{
            conector();
            
            String [] vector = dJSon.getValues();
            
            for (String jsonString : vector) {
                JSONObject item = new JSONObject(jsonString);

                int numero = item.getInt("number");
                String direccion = item.getString("address");
                int disponibles = item.getInt("available");
                int libres = item.getInt("free");
                int abierta = item.getString("open").equals("T") ? 1 : 0;
                String actualizado = item.getString("updated_at");
                
                DateTimeFormatter originalFormat = DateTimeFormatter.ofPattern("dd/MM/yyyy HH:mm:ss");
                DateTimeFormatter destinoFormat = DateTimeFormatter.ofPattern("yyyy-MM-dd HH:mm:ss");
                LocalDateTime fecha = LocalDateTime.parse(actualizado, originalFormat);
                String fechaFormateada = fecha.format(destinoFormat);
                
                JSONObject geo = item.getJSONObject("geo_point_2d");
                double lon = geo.getDouble("lon");
                double lat = geo.getDouble("lat");
                
                String sql = "INSERT INTO historico (estacion_id, direccion, bicis_disponibles, anclajes_libres, estado_operativo, fecha_registro, ubicación) "
                + "VALUES (?, ?, ?, ?, ?, ?, ST_GeomFromText(?, 4326))";
                
                PreparedStatement ps = con.prepareStatement(sql);
                ps.setInt(1, numero);
                ps.setString(2, direccion);
                ps.setInt(3, disponibles);
                ps.setInt(4, libres);
                ps.setInt(5, abierta);
                ps.setString(6, fechaFormateada);
                ps.setString(7, "POINT(" + lon + " " + lat + ")");
                
                int filasAfectadas = ps.executeUpdate();

                if (filasAfectadas > 0) {
                    jLabelAddBDD.setText("Registro insertado correctamente.");
                } else {
                    jLabelAddBDD.setText("No se insertó ningún registro.");
                }
            }
        }
        // Si la conexion NO fue exitosa mostramos un mensaje de error
        catch (SQLException e) {
            jLabelAddBDD.setText("Error de conexion: " + e);
        }
    }//GEN-LAST:event_jButtonAddBDDMouseClicked

    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ConexionBDD.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ConexionBDD().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAddBDD;
    private javax.swing.JButton jButtonCerrarCxBDD;
    private javax.swing.JButton jButtonConectarBDD;
    private javax.swing.JButton jButtonDatos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelAddBDD;
    private javax.swing.JLabel jLabelDatosEstaciones;
    private javax.swing.JLabel jLabelEstadoCx;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextFieldNumEst;
    // End of variables declaration//GEN-END:variables
}




